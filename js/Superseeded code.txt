 // Select HRU property by its id(HRU number) - following discussion with Peter decided to use array.filter
  as it is cleaner and quicker
      function lookUpData(hruid, prop) {
          for (let i = 0; i < cleanDatasetCopy.length; i++) {
              if (cleanDatasetCopy[i].id === hruid) {
                  return cleanDatasetCopy[i][prop] || 'lu_mgt invalid';
              }
          }
          return 'id invalid';
      }
      console.log (lookUpData('1', 'lu_mgt'))


      
    // Add the dataset to the window object
    window.swatData = [...cleanHruData];


      // Apply and print the updates to the llist  hru
  export function appToHru() {
    updateHru(1, "range");
    console.log(data[0])
  }





// //trying to use functions from mapFunctions (error in console)
problem was- I was trying to pass zip as a text file with fetchfeature(now redundant) 
// //fetchFeature('/data/hru2.zip')
//   //  .then(feature => {
//    //     const hru2 = convertShp(feature)
//     //    hru2.addTo(mymap)
//             .once("data:loaded", function () {
//             console.log("finished loaded shapefile");
//             })
//     });


// adding map shapefiles, messy, need to modulerise
// var shpfile2 = new L.Shapefile('/data/hru1.zip', {
//     onEachFeature: function (feature, layer) {
//         if (feature.properties) {
//             layer.bindPopup(Object.keys(feature.properties).map(function (k) {
//                 return k + ": " + feature.properties[k];
//             }).join("<br />"), {
//                 maxHeight: 100
//             });
//         }
//     }
// });
